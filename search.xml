<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[springboot mybatis多数据源]]></title>
    <url>%2F2017%2F07%2F03%2Fspringboot-mybatis%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>springboot mybatis</category>
      </categories>
      <tags>
        <tag>springboot mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo 搭建博客（四）]]></title>
    <url>%2F2017%2F06%2F28%2Fblog-2319%2F</url>
    <content type="text"><![CDATA[1. 搭建博客 &nbsp; 2. 设置主题 &nbsp; 3. 域名绑定 &nbsp; 4. 发表文章 使用 markdown 语法发布博文 创建md文件（markdown文件）在文章中添加图片 在博客目录安装 hexo-asset-image1npm install hexo-asset-image --save ## 确保已切换至个人的博客目录 设置站点配置文件的post_asset_folder选项为 true1post_asset_folder: true 创建 文章(以本篇为例)12hexo new post blog-2319 ## 确保已切换至个人的博客目录INFO Created: dir\source\_posts\blog-2319.md ## info 当安装过 hexo-asset-image 后,运行hexo new post “xxxx”来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹,该文件用来存放本篇博文的图片 Markdown语法写博文语法为 markdown 语法。 参考 markdown语法百度 markdown语法]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo 搭建博客（三）]]></title>
    <url>%2F2017%2F06%2F28%2Fblog-2318%2F</url>
    <content type="text"><![CDATA[1. 搭建博客 &nbsp; 2. 设置主题 &nbsp; 3. 域名绑定 &nbsp; 4. 发表文章 选择 github pages 或者 oschina pages 完成域名绑定 Github Pages 绑定完成github注册和创建github pages 注册 github https://github.com 此处以我的用户名为例 pseason 创建github pages（实际创建一个仓库，仓库名称为：pseason.github.io） 为github用户添加 SSH key 为本地git添加 用户名和邮箱12git config --global user.name "pseason" git config --global user.email 243834447@qq.com 验证结果12345C:\Windows\System32&gt;git config user.namepseasonC:\Windows\System32&gt;git config user.email243834447@qq.com 添加ssh key（桌面右键 Git Bash Here）1ssh-keygen -t rsa -C '你的邮箱' # 邮箱为注册github填写的邮箱 然后一直按回车，成功之后我们根据提示的保存路径找到一个 id _rsa.pub的文件，复制里面的全部内容。然后登陆的github账号，找到右上角的图标，打开settings,接着找到左面的sshkey接着点击右面的new ssh key，然后把我们刚才复制的东西copy进去，这个密钥的标题随便起。OK密钥创建完成。 上传本地博客到github 在 站点配置文件 添加部署方式和github仓库1234deploy: type: git repo: git@github.com:pseason/pseason.github.io.git branch: master 在博客目录安装 hexo-deployer-git ,切换博客目录，执行命令1npm install hexo-deployer-git --save 执行命令,上传至github,访问 github pages 12hexo clean &amp;&amp; hexo d # (确保已经切换至博客目录)(提示输入密码，输入个人github信息) 提示信息： To git@github.com:pseason/pseason.github.io.git 9340bf4..90fec38 HEAD -&gt; master INFO Deploy done: git 访问自己的 github pages 访问 github pages 例如：pseason.github.iogithub pages（实际创建一个仓库，仓库名称为：pseason.github.io） 绑定域名（以阿里云解析为例） 购买自己喜欢的域名 阿里云-万网在 cmd 下 ping github pages (获取个人github pages的ip)123456C:\Windows\System32&gt;ping pseason.github.io正在 Ping github.map.fastly.net [151.101.72.133] 具有 32 字节的数据:来自 151.101.72.133 的回复: 字节=32 时间=106ms TTL=54来自 151.101.72.133 的回复: 字节=32 时间=101ms TTL=54来自 151.101.72.133 的回复: 字节=32 时间=103ms TTL=54来自 151.101.72.133 的回复: 字节=32 时间=124ms TTL=54 151.101.72.133为自己 github pages 的ip地址登录个人阿里云 云解析DNS 为自己购买的域名添加解析指向我们的github pages添加2条解析记录（一般2-3分钟生效）12A @ 151.101.72.133 # @A www 151.101.72.133 # www 至此我们购买的域名已指向 github pages 了。访问自己的域名，查看结果。（单向绑定）再次为 github pages 添加指向我们个人域名的关联 （双向绑定）在个人博客主题source目录添加 CNAME 文件，在 CNAME 文件中录入我们自己购买的域名再次执行 hexo d 提交 CNAME 文件至自己的 github pages 主页仓库，至此完成双向绑定。 1hexo clean &amp;&amp; hexo d ## 确保已切换至个人的博客目录 为什么要在theme的source文件添加 CNAME 文件 ?当我们在提交博客代码时会冲掉仓库中 CNAME 文件，为保证双向绑定，在本地添加 CNAME 文件，确保每次提交github仓库中都存在该 CNAME 文件 oschina pages 绑定oschina pages 绑定和 github pages 绑定大致相同 码云pages未开通域名指向功能，只能同通过 yourName.oschina.io 访问，但在国内访问速度比域名指向 github pages 快，体验更好，缺点是不能域名绑定]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo 搭建博客（二）]]></title>
    <url>%2F2017%2F06%2F28%2Fblog-2208%2F</url>
    <content type="text"><![CDATA[1. 搭建博客 &nbsp; 2. 设置主题 &nbsp; 3. 域名绑定 &nbsp; 4. 发表文章 挑选主题 (本文将以 next 主题为例) 挑选喜欢的主题更多主题请访问https://hexo.io/themes/ 获取 &nbsp; 参考喜欢主题文档进行相关设置 安装主题 参考 http://theme-next.iissnan.com/getting-started.html#install-next-theme 启用 NexT 主题 参考 http://theme-next.iissnan.com/getting-started.html#activate-next-theme 主题设定 参考 http://theme-next.iissnan.com/getting-started.html#theme-settings 主题配置 参考 http://theme-next.iissnan.com/theme-settings.html 集成第三方服务 参考 http://theme-next.iissnan.com/third-party-services.html]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo 搭建博客（一）]]></title>
    <url>%2F2017%2F06%2F28%2Fblog-2104%2F</url>
    <content type="text"><![CDATA[1. 搭建博客 &nbsp; 2. 设置主题 &nbsp; 3. 域名绑定 &nbsp; 4. 发表文章 安装git 安装git,参考 菜鸟教程-git教程 或者 百度安装在cmd下输入 git –version，显示git版本，安装完成12C:\Windows\System32&gt;git --versiongit version 2.9.0.windows.1 安装node、npm 安装node，参考 菜鸟教程-node.js教程 或者 百度安装在cmd输入 node -v npm -v,显示node和npm版本，安装完成12345C:\Windows\System32&gt;node -vv6.9.5C:\Windows\System32&gt;npm -v3.10.10 安装hexo, 运行hexo 安装hexo 参考 https://hexo.io/12345npm install hexo-cli -g # 安装hexo-clihexo version # 查看hexo版本cd your dir &amp;&amp; hexo init blogName # 初始化 your blog cd blogName &amp;&amp; npm install # 安装组件hexo server # 运行hexo 运行成功显示：INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 访问 hexo 访问 http://localhost:4000]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[考量一件事（consider one thing）]]></title>
    <url>%2F2017%2F06%2F26%2F2336%2F</url>
    <content type="text"><![CDATA[从写程序的角度考量一件事或者一个动作 1thing：项目组打算开发一个项目 1、init 项目在开发之前已经具备哪些条件？应该准备哪些？ 2、after 项目开发之前是否做过评估，调研？ 3、execute/starting 项目开始推进 4、on/doing 项目持续推进 5、stop 项目因为一些原因停止？ 6、end/over 项目结束 7、result 项目顺利完成？ 8、before 项目完成之后的该做什么？（上线，维护） 9、filter 项目在进行中该过滤什么？ 10、listener 在项目推进过程中持续关注，监控每个环节？ 11、dispatcher 项目推进过程中适时根据进展调度？ 12、adapter 为项目适配最优配置以适应进展调度？ 13、handler 最优配置？]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[说说5个W和1个H]]></title>
    <url>%2F2017%2F06%2F25%2F2301%2F</url>
    <content type="text"><![CDATA[5W+1H：是对选定的项目、工序或操作，都要从原因（何因Why）、对象（何事What）、地点（何地Where）、时间（何时When）、人员（何人Who）、方法（何法How）等六个方面提出问题进行思考。 1things：项目组在开发一个项目？ 对象 （What） ——什么事情 项目组在开发什么项目？ 场所 （Where）——什么地点 选择工作场所应该考虑的,在things中不考虑 时间 （When） ——什么时候 在一段时间按照程序做事。为什么要在这个时候干？能不能在其他时候干？把后工序提到前面行不行？到底应该在什么时间干？ 人员 （Who） ——什么人员 这个事情是谁在干？为什么要让他干？ 为什么（Why） ——什么原因 为什么用这个技术？为什么非做不可？ 方式 （How） ——如何 我们是怎样干的？为什么用这种方法来干？有没有别的方法可以干？到底应该怎么干？需求变动，又如何干？]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
</search>